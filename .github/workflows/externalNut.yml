on:
  workflow_call:
    inputs:
      # could we get this from pjson?
      packageName:
        description: "The npm package that this repository publishes.  ex: @salesforce/core"
        required: true
        type: string
      externalProjectGitUrl:
        description: "The url that will be cloned.  This contains the NUTs you want to run.  Ex: https://github.com/salesforcecli/plugin-user"
        type: string
        required: true
      command:
        required: false
        type: string
        default: yarn test:nuts
        description: "command to execute (ex: yarn test:nuts)"
      nodeVersion:
        required: false
        description: version of node to run tests against.  Use things like [lts/-1, lts/*, latest] to avoid hardcoding versions
        type: string
        default: lts/*
      os:
        required: false
        description: "runs-on property, ex: ubuntu-latest, windows-latest"
        type: string
        default: "ubuntu-latest"
      sfdxExecutablePath:
        required: false
        description: "Path to sfdx executable to be used by NUTs, defaults to ''"
        type: string
      preBuildCommands:
        required: false
        description: "commands to run before the build...for example, to delete known module conflicts"
        type: string
        default: 'echo "no preBuildCommands passed"'
      postBuildCommands:
        required: false
        description: "script to run after the build"
        type: string
        default: 'echo "no postBuildCommands passed"'
      preExternalBuildCommands:
        required: false
        description: "commands to run before the build of the external repo...for example, to delete known module conflicts"
        type: string
        default: 'echo "no preExternalBuildCommands passed"'
      useCache:
        required: false
        type: boolean
        default: true

jobs:
  external-nut:
    name: ${{ inputs.command }}
    runs-on: ${{ inputs.os }}
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.nodeVersion }}
      - run: npm install -g sfdx-cli shx yarn-deduplicate --omit=dev
      - run: git clone ${{ inputs.externalProjectGitUrl}} $(pwd)
      - name: Cache node modules
        if: inputs.useCache
        id: cache-nodemodules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # caching node_modules
          path: node_modules
          key: ${{ runner.os }}-externalNuts-${{ env.cache-name }}-${{ inputs.externalProjectGitUrl}}-${{ github.sha }}
      - run: yarn install --network-timeout 600000
        if: ${{ steps.cache-nodemodules.outputs.cache-hit != 'true' }}
      - name: swap this dependency for the version on this branch
        if: ${{ steps.cache-nodemodules.outputs.cache-hit != 'true' }}
        run: |
          yarn remove ${{ inputs.packageName }}
          yarn add ${{ github.repository }}#${{ github.sha }}
          npx yarn-deduplicate
          yarn install --network-timeout 600000
      - name: install/build ${{ inputs.packageName}} in node_modules
        if: ${{ steps.cache-nodemodules.outputs.cache-hit != 'true' }}
        working-directory: node_modules/${{ inputs.packageName }}
        run: |
          yarn install --network-timeout 600000
          ${{ inputs.preBuildCommands }}
          yarn compile
          ${{ inputs.postBuildCommands }}
      - name: preExternalBuildCommands
        if: ${{ steps.cache-nodemodules.outputs.cache-hit != 'true' }}
        run: ${{ inputs.preExternalBuildCommands }}
      - name: Build the external project (where the NUTs are)
        run: yarn compile
      - name: NUTs with custom executable
        run: ${{ inputs.command }}
        if: inputs.sfdxExecutablePath
        env:
          TESTKIT_EXECUTABLE_PATH: ${{ inputs.sfdxExecutablePath }}
          TESTKIT_AUTH_URL: ${{ secrets.TESTKIT_AUTH_URL }}
          TESTKIT_HUB_USERNAME: ${{ secrets.TESTKIT_HUB_USERNAME }}
          TESTKIT_HUB_INSTANCE: ${{ secrets.TESTKIT_HUB_INSTANCE }}
          TESTKIT_JWT_CLIENT_ID: ${{ secrets.TESTKIT_JWT_CLIENT_ID }}
          TESTKIT_JWT_KEY: ${{ secrets.TESTKIT_JWT_KEY }}
      - name: NUTs
        run: ${{ inputs.command }}
        if: ${{ !inputs.sfdxExecutablePath }}
        env:
          TESTKIT_AUTH_URL: ${{ secrets.TESTKIT_AUTH_URL }}
          TESTKIT_HUB_USERNAME: ${{ secrets.TESTKIT_HUB_USERNAME }}
          TESTKIT_HUB_INSTANCE: ${{ secrets.TESTKIT_HUB_INSTANCE }}
          TESTKIT_JWT_CLIENT_ID: ${{ secrets.TESTKIT_JWT_CLIENT_ID }}
          TESTKIT_JWT_KEY: ${{ secrets.TESTKIT_JWT_KEY }}
